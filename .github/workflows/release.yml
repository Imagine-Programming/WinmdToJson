name: Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Get dotnet version
      id: get_dotnet_version
      shell: pwsh
      run: |
        .\Scripts\getDotNetVersion.ps1
    - name: Setup dotnet ${{ steps.get_dotnet_version.outputs.dotNetVersion }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ steps.get_dotnet_version.outputs.dotNetVersion }}
    - name: Build and Publish
      run: |
        dotnet publish -c Release -o publish

    - name: Package Application
      run: |
        zip -r WinmdToJson_${{ matrix.os }}_${{ github.run_number }}.zip publish
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-app
        path: WinmdToJson_${{ matrix.os }}_${{ github.run_number }}.zip

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./*.zip
          asset_name: ./*.zip
          asset_content_type: application/zip